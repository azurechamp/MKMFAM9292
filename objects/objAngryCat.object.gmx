<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Lets start by giving the cat a physics fixture
var catFixture;
catFixture = physics_fixture_create();

//Fixture properties
physics_fixture_set_circle_shape(catFixture, 20);
physics_fixture_set_density(catFixture, 0.15);
physics_fixture_set_restitution(catFixture, 0.2);
physics_fixture_set_angular_damping(catFixture, 0.3);
physics_fixture_set_linear_damping(catFixture, 0.3);

//Bind the fixture
physics_fixture_bind(catFixture, self);

//Clean up!
physics_fixture_delete(catFixture);

//Cat vars
makingPoo = true;
lastPooX = 0;
lastPooY = 0;
hspd = 0;
peakY = y;

//Remove any previous trails
with (oPoo) instance_destroy();

image_speed = 0.15;

//Change cat to different colour
if CAT_IS_BLACK sprite_index = sprCatBlack;

//Set sounds
audio_play_sound(sndCatLaunch, 1, false);
audio_stop_sound(sndStretch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create explosion
repeat(10) instance_create(x,y,oPoof);
    
//Play sound
audio_play_sound(sndCatPop, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Time has passed so destroy...
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Store the horizontal speed
hspd = x - xprevious;

//Check to see if the simulation has finished for this instance
if phy_sleeping then instance_destroy();

//Check to see if instance is still in the room
if x &lt; 0 or x &gt; room_width or y &lt; 0 then instance_destroy();

//Make a trail if still permitted    
if makingPoo
{
if point_distance(x,y,lastPooX,lastPooY) &gt; 30
    {
    //Create trail instance
    instance_create(x,y,oPoo);
    lastPooX = x;
    lastPooY = y;
    }
}
 
//If speed has reduced enough, set an alarm to destroy the instance   
if abs(hspd) &lt; 1
{
if alarm[0] == -1 alarm[0] = room_speed * 4;
}
else
{
alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFloor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision with floor

//Switch off trails
makingPoo = false;

//Change cat sprite
sprite_index = sprCatHit;

//Check cat type
if CAT_IS_BLACK then sprite_index = sprCatHitBlack;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_parentBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision with block

//Switch off trails
makingPoo = false;

//Change the sprite
sprite_index = sprCatHit;

//Check cat type
if CAT_IS_BLACK then sprite_index = sprCatHitBlack;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
